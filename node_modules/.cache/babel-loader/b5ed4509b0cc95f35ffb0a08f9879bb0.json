{"ast":null,"code":"var _jsxFileName = \"/Users/ry1537/Documents/GitHub/rtc-web3/src/components/AudioForNft.tsx\",\n    _s = $RefreshSig$();\n\nimport { useAppSelector } from \"app/hooks\";\nimport { selectCurrentMediaRunning } from \"app/mediaRunning/mediaRunning\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTimeoutFn } from \"react-use\";\nimport isSafariBrowser from \"utils/isSafariBrowser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AudioForNft = _ref => {\n  _s();\n\n  let {\n    nftId,\n    className = \"absolute opacity-0 \",\n    src = \"./music.mp3\"\n  } = _ref;\n  const currentMediaRunning = useAppSelector(selectCurrentMediaRunning);\n  let [isShowing, setIsShowing] = useState(true);\n  let [,, resetIsShowing] = useTimeoutFn(() => setIsShowing(true), 200);\n  const IS_PLAY = currentMediaRunning.nftId === nftId && currentMediaRunning.state === \"playing\";\n  useEffect(() => {\n    if (currentMediaRunning.state === \"paused\") {\n      setIsShowing(false);\n      resetIsShowing();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [currentMediaRunning]);\n  useEffect(() => {\n    const audioEl = document.getElementById(nftId);\n    if (!audioEl) return;\n\n    if (IS_PLAY) {\n      audioEl.play();\n    } else {\n      audioEl.pause();\n    }\n  }, [IS_PLAY, nftId]);\n\n  if (!isSafariBrowser() && !IS_PLAY) {\n    return null;\n  } // FOR SAFARI BROWSER\n\n\n  if (!isShowing) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    title: \"Play\",\n    dangerouslySetInnerHTML: {\n      __html: `<audio id=${nftId} loop  >\n                <source src=${src} type=\"audio/mp3\" />\n                Your browser does not support the audio element.\n              </audio>`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AudioForNft, \"AnL+16SuzfLxm5X+pliHesqUDmQ=\", false, function () {\n  return [useAppSelector, useTimeoutFn];\n});\n\n_c = AudioForNft;\nexport default AudioForNft;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioForNft\");","map":{"version":3,"names":["useAppSelector","selectCurrentMediaRunning","React","useEffect","useState","useTimeoutFn","isSafariBrowser","AudioForNft","nftId","className","src","currentMediaRunning","isShowing","setIsShowing","resetIsShowing","IS_PLAY","state","audioEl","document","getElementById","play","pause","__html"],"sources":["/Users/ry1537/Documents/GitHub/rtc-web3/src/components/AudioForNft.tsx"],"sourcesContent":["import { useAppSelector } from \"app/hooks\";\r\nimport { selectCurrentMediaRunning } from \"app/mediaRunning/mediaRunning\";\r\nimport React, { FC, useEffect, useState } from \"react\";\r\nimport { useTimeoutFn } from \"react-use\";\r\nimport isSafariBrowser from \"utils/isSafariBrowser\";\r\n\r\ninterface AudioForNftProps {\r\n  src?: string;\r\n  className?: string;\r\n  nftId: string;\r\n}\r\n\r\nconst AudioForNft: FC<AudioForNftProps> = ({\r\n  nftId,\r\n  className = \"absolute opacity-0 \",\r\n  src = \"./music.mp3\",\r\n}) => {\r\n  const currentMediaRunning = useAppSelector(selectCurrentMediaRunning);\r\n\r\n  let [isShowing, setIsShowing] = useState(true);\r\n  let [, , resetIsShowing] = useTimeoutFn(() => setIsShowing(true), 200);\r\n\r\n  const IS_PLAY =\r\n    currentMediaRunning.nftId === nftId &&\r\n    currentMediaRunning.state === \"playing\";\r\n\r\n  useEffect(() => {\r\n    if (currentMediaRunning.state === \"paused\") {\r\n      setIsShowing(false);\r\n      resetIsShowing();\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentMediaRunning]);\r\n\r\n  useEffect(() => {\r\n    const audioEl = document.getElementById(nftId) as HTMLAudioElement;\r\n    if (!audioEl) return;\r\n\r\n    if (IS_PLAY) {\r\n      audioEl.play();\r\n    } else {\r\n      audioEl.pause();\r\n    }\r\n  }, [IS_PLAY, nftId]);\r\n\r\n  if (!isSafariBrowser() && !IS_PLAY) {\r\n    return null;\r\n  }\r\n\r\n  // FOR SAFARI BROWSER\r\n  if (!isShowing) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={className}\r\n      title=\"Play\"\r\n      dangerouslySetInnerHTML={{\r\n        __html: `<audio id=${nftId} loop  >\r\n                <source src=${src} type=\"audio/mp3\" />\r\n                Your browser does not support the audio element.\r\n              </audio>`,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default AudioForNft;\r\n"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,WAA/B;AACA,SAASC,yBAAT,QAA0C,+BAA1C;AACA,OAAOC,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;;AAQA,MAAMC,WAAiC,GAAG,QAIpC;EAAA;;EAAA,IAJqC;IACzCC,KADyC;IAEzCC,SAAS,GAAG,qBAF6B;IAGzCC,GAAG,GAAG;EAHmC,CAIrC;EACJ,MAAMC,mBAAmB,GAAGX,cAAc,CAACC,yBAAD,CAA1C;EAEA,IAAI,CAACW,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAAxC;EACA,IAAI,IAAKU,cAAL,IAAuBT,YAAY,CAAC,MAAMQ,YAAY,CAAC,IAAD,CAAnB,EAA2B,GAA3B,CAAvC;EAEA,MAAME,OAAO,GACXJ,mBAAmB,CAACH,KAApB,KAA8BA,KAA9B,IACAG,mBAAmB,CAACK,KAApB,KAA8B,SAFhC;EAIAb,SAAS,CAAC,MAAM;IACd,IAAIQ,mBAAmB,CAACK,KAApB,KAA8B,QAAlC,EAA4C;MAC1CH,YAAY,CAAC,KAAD,CAAZ;MACAC,cAAc;IACf,CAJa,CAMd;;EACD,CAPQ,EAON,CAACH,mBAAD,CAPM,CAAT;EASAR,SAAS,CAAC,MAAM;IACd,MAAMc,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBX,KAAxB,CAAhB;IACA,IAAI,CAACS,OAAL,EAAc;;IAEd,IAAIF,OAAJ,EAAa;MACXE,OAAO,CAACG,IAAR;IACD,CAFD,MAEO;MACLH,OAAO,CAACI,KAAR;IACD;EACF,CATQ,EASN,CAACN,OAAD,EAAUP,KAAV,CATM,CAAT;;EAWA,IAAI,CAACF,eAAe,EAAhB,IAAsB,CAACS,OAA3B,EAAoC;IAClC,OAAO,IAAP;EACD,CAhCG,CAkCJ;;;EACA,IAAI,CAACH,SAAL,EAAgB;IACd,OAAO,IAAP;EACD;;EAED,oBACE;IACE,SAAS,EAAEH,SADb;IAEE,KAAK,EAAC,MAFR;IAGE,uBAAuB,EAAE;MACvBa,MAAM,EAAG,aAAYd,KAAM;AACnC,8BAA8BE,GAAI;AAClC;AACA;IAJ+B;EAH3B;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAvDD;;GAAMH,W;UAKwBP,c,EAGDK,Y;;;KARvBE,W;AAyDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}