{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst calculateTimeLeft = () => {\n  let year = new Date().getFullYear();\n  let month = new Date().getMonth();\n  let difference = +new Date(`${month + 2}/10/${year}`) - +new Date();\n  let timeLeft = {\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n\n  if (difference > 0) {\n    timeLeft = {\n      days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n      hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n      minutes: Math.floor(difference / 1000 / 60 % 60),\n      seconds: Math.floor(difference / 1000 % 60)\n    };\n  }\n\n  return timeLeft;\n};\n\nconst useCountDownTime = () => {\n  _s();\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n    return () => clearTimeout(timer);\n  });\n  return timeLeft;\n};\n\n_s(useCountDownTime, \"2yD7J9BRKO6eNclZT/dCzRz3Fpg=\");\n\nexport default useCountDownTime;","map":{"version":3,"names":["useState","useEffect","calculateTimeLeft","year","Date","getFullYear","month","getMonth","difference","timeLeft","days","hours","minutes","seconds","Math","floor","useCountDownTime","setTimeLeft","timer","setTimeout","clearTimeout"],"sources":["/Users/ry1537/Documents/GitHub/rtc-web3/src/hooks/useCountDownTime.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst calculateTimeLeft = () => {\r\n  let year = new Date().getFullYear();\r\n  let month = new Date().getMonth();\r\n  let difference = +new Date(`${month + 2}/10/${year}`) - +new Date();\r\n\r\n  let timeLeft = {\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  };\r\n\r\n  if (difference > 0) {\r\n    timeLeft = {\r\n      days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n      hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n      minutes: Math.floor((difference / 1000 / 60) % 60),\r\n      seconds: Math.floor((difference / 1000) % 60),\r\n    };\r\n  }\r\n\r\n  return timeLeft;\r\n};\r\n\r\nconst useCountDownTime = () => {\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  });\r\n\r\n  return timeLeft;\r\n};\r\n\r\nexport default useCountDownTime;\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;EAC9B,IAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAX;EACA,IAAIC,KAAK,GAAG,IAAIF,IAAJ,GAAWG,QAAX,EAAZ;EACA,IAAIC,UAAU,GAAG,CAAC,IAAIJ,IAAJ,CAAU,GAAEE,KAAK,GAAG,CAAE,OAAMH,IAAK,EAAjC,CAAD,GAAuC,CAAC,IAAIC,IAAJ,EAAzD;EAEA,IAAIK,QAAQ,GAAG;IACbC,IAAI,EAAE,CADO;IAEbC,KAAK,EAAE,CAFM;IAGbC,OAAO,EAAE,CAHI;IAIbC,OAAO,EAAE;EAJI,CAAf;;EAOA,IAAIL,UAAU,GAAG,CAAjB,EAAoB;IAClBC,QAAQ,GAAG;MACTC,IAAI,EAAEI,IAAI,CAACC,KAAL,CAAWP,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAArB,CADG;MAETG,KAAK,EAAEG,IAAI,CAACC,KAAL,CAAYP,UAAU,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAX,GAAkC,EAA7C,CAFE;MAGTI,OAAO,EAAEE,IAAI,CAACC,KAAL,CAAYP,UAAU,GAAG,IAAb,GAAoB,EAArB,GAA2B,EAAtC,CAHA;MAITK,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAYP,UAAU,GAAG,IAAd,GAAsB,EAAjC;IAJA,CAAX;EAMD;;EAED,OAAOC,QAAP;AACD,CAtBD;;AAwBA,MAAMO,gBAAgB,GAAG,MAAM;EAAA;;EAC7B,MAAM,CAACP,QAAD,EAAWQ,WAAX,IAA0BjB,QAAQ,CAACE,iBAAiB,EAAlB,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMiB,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BF,WAAW,CAACf,iBAAiB,EAAlB,CAAX;IACD,CAFuB,EAErB,IAFqB,CAAxB;IAGA,OAAO,MAAMkB,YAAY,CAACF,KAAD,CAAzB;EACD,CALQ,CAAT;EAOA,OAAOT,QAAP;AACD,CAXD;;GAAMO,gB;;AAaN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}