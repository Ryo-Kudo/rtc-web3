{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport rootReducers from \"./rootReducers\";\nconst isDev = process.env.NODE_ENV === \"development\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage,\n  whitelist: []\n};\nconst rootReducer = combineReducers(rootReducers);\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middlewareLogger = !!isDev ? logger : [];\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }).concat(middlewareLogger)\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","logger","rootReducers","isDev","process","env","NODE_ENV","persistConfig","key","version","whitelist","rootReducer","persistedReducer","middlewareLogger","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","persistor"],"sources":["/Users/ry1537/Documents/GitHub/rtc-web3/src/app/store.ts"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\nimport rootReducers from \"./rootReducers\";\r\n\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  version: 1,\r\n  storage,\r\n  whitelist: [],\r\n};\r\n\r\nconst rootReducer = combineReducers(rootReducers);\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\nconst middlewareLogger: any = !!isDev ? logger : [];\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(middlewareLogger),\r\n});\r\n\r\nexport let persistor = persistStore(store);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAvC;AAEA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBC,OAAO,EAAE,CAFW;EAGpBT,OAHoB;EAIpBU,SAAS,EAAE;AAJS,CAAtB;AAOA,MAAMC,WAAW,GAAGpB,eAAe,CAACW,YAAD,CAAnC;AACA,MAAMU,gBAAgB,GAAGnB,cAAc,CAACc,aAAD,EAAgBI,WAAhB,CAAvC;AACA,MAAME,gBAAqB,GAAG,CAAC,CAACV,KAAF,GAAUF,MAAV,GAAmB,EAAjD;AAEA,OAAO,MAAMa,KAAK,GAAGxB,cAAc,CAAC;EAClCyB,OAAO,EAAEH,gBADyB;EAGlCI,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACzB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;IADC;EADA,CAAD,CAApB,CAIGqB,MAJH,CAIUP,gBAJV;AAJgC,CAAD,CAA5B;AAWP,OAAO,IAAIQ,SAAS,GAAG7B,YAAY,CAACsB,KAAD,CAA5B"},"metadata":{},"sourceType":"module"}