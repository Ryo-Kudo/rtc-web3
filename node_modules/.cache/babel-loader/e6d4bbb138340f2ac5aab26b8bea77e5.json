{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {};\nexport const mediaRunningSlice = createSlice({\n  name: \"mediaRunning\",\n  initialState,\n  reducers: {\n    changeCurrentMediaRunning: (state, action) => {\n      return { ...state,\n        ...action.payload\n      };\n    },\n    changeStateMediaRunning: (state, action) => {\n      return { ...state,\n        state: action.payload\n      };\n    },\n    removeMediaRunning: state => {\n      return {\n        listIdAudio: state.listIdAudio\n      };\n    },\n    //\n    addNewIdListAudio: (state, action) => {\n      return { ...state,\n        listIdAudio: [...(state.listIdAudio || []), action.payload]\n      };\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  changeCurrentMediaRunning,\n  changeStateMediaRunning,\n  removeMediaRunning,\n  addNewIdListAudio\n} = mediaRunningSlice.actions;\nexport const selectCurrentMediaRunning = state => state.mediaRunning;\nexport default mediaRunningSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mediaRunningSlice","name","reducers","changeCurrentMediaRunning","state","action","payload","changeStateMediaRunning","removeMediaRunning","listIdAudio","addNewIdListAudio","actions","selectCurrentMediaRunning","mediaRunning","reducer"],"sources":["/Users/ry1537/Documents/GitHub/rtc-web3/src/app/mediaRunning/mediaRunning.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"app/store\";\r\n\r\nexport interface MediaRunningState {\r\n  nftId?: string;\r\n  state?: \"playing\" | \"paused\" | \"ended\" | null;\r\n  // state?: \"loading\" | \"playing\" | \"paused\" | \"ended\" | null;\r\n  listIdAudio?: string[];\r\n}\r\n\r\nconst initialState: MediaRunningState = {};\r\n\r\nexport const mediaRunningSlice = createSlice({\r\n  name: \"mediaRunning\",\r\n  initialState,\r\n  reducers: {\r\n    changeCurrentMediaRunning: (\r\n      state,\r\n      action: PayloadAction<MediaRunningState>\r\n    ) => {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    changeStateMediaRunning: (\r\n      state,\r\n      action: PayloadAction<MediaRunningState[\"state\"]>\r\n    ) => {\r\n      return {\r\n        ...state,\r\n        state: action.payload,\r\n      };\r\n    },\r\n    removeMediaRunning: (state) => {\r\n      return {\r\n        listIdAudio: state.listIdAudio,\r\n      };\r\n    },\r\n    //\r\n    addNewIdListAudio: (state, action: PayloadAction<string>) => {\r\n      return {\r\n        ...state,\r\n        listIdAudio: [...(state.listIdAudio || []), action.payload],\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  changeCurrentMediaRunning,\r\n  changeStateMediaRunning,\r\n  removeMediaRunning,\r\n  addNewIdListAudio,\r\n} = mediaRunningSlice.actions;\r\n\r\nexport const selectCurrentMediaRunning = (state: RootState) =>\r\n  state.mediaRunning;\r\n\r\nexport default mediaRunningSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAUA,MAAMC,YAA+B,GAAG,EAAxC;AAEA,OAAO,MAAMC,iBAAiB,GAAGF,WAAW,CAAC;EAC3CG,IAAI,EAAE,cADqC;EAE3CF,YAF2C;EAG3CG,QAAQ,EAAE;IACRC,yBAAyB,EAAE,CACzBC,KADyB,EAEzBC,MAFyB,KAGtB;MACH,OAAO,EACL,GAAGD,KADE;QAEL,GAAGC,MAAM,CAACC;MAFL,CAAP;IAID,CATO;IAURC,uBAAuB,EAAE,CACvBH,KADuB,EAEvBC,MAFuB,KAGpB;MACH,OAAO,EACL,GAAGD,KADE;QAELA,KAAK,EAAEC,MAAM,CAACC;MAFT,CAAP;IAID,CAlBO;IAmBRE,kBAAkB,EAAGJ,KAAD,IAAW;MAC7B,OAAO;QACLK,WAAW,EAAEL,KAAK,CAACK;MADd,CAAP;IAGD,CAvBO;IAwBR;IACAC,iBAAiB,EAAE,CAACN,KAAD,EAAQC,MAAR,KAA0C;MAC3D,OAAO,EACL,GAAGD,KADE;QAELK,WAAW,EAAE,CAAC,IAAIL,KAAK,CAACK,WAAN,IAAqB,EAAzB,CAAD,EAA+BJ,MAAM,CAACC,OAAtC;MAFR,CAAP;IAID;EA9BO;AAHiC,CAAD,CAArC,C,CAqCP;;AACA,OAAO,MAAM;EACXH,yBADW;EAEXI,uBAFW;EAGXC,kBAHW;EAIXE;AAJW,IAKTV,iBAAiB,CAACW,OALf;AAOP,OAAO,MAAMC,yBAAyB,GAAIR,KAAD,IACvCA,KAAK,CAACS,YADD;AAGP,eAAeb,iBAAiB,CAACc,OAAjC"},"metadata":{},"sourceType":"module"}