{"ast":null,"code":"var _jsxFileName = \"/Users/ry1537/Documents/GitHub/rtc-web3/src/components/ModalTransferToken.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport ButtonPrimary from \"shared/Button/ButtonPrimary\";\nimport ButtonSecondary from \"shared/Button/ButtonSecondary\";\nimport Input from \"shared/Input/Input\";\nimport NcModal from \"shared/NcModal/NcModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalTransferToken = _ref => {\n  _s();\n\n  let {\n    show,\n    onCloseModalTransferToken\n  } = _ref;\n  const textareaRef = useRef(null);\n  useEffect(() => {\n    if (show) {\n      setTimeout(() => {\n        const element = textareaRef.current;\n\n        if (element) {\n          element.focus();\n          element.setSelectionRange(element.value.length, element.value.length);\n        }\n      }, 400);\n    }\n  }, [show]);\n\n  const renderContent = () => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-neutral-900 dark:text-neutral-200\",\n        children: \"Transfer token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm\",\n        children: \"You can transfer tokens from your address to another\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 \",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          ref: textareaRef,\n          placeholder: \"Paste address\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonSecondary, {\n          type: \"button\",\n          onClick: onCloseModalTransferToken,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderTrigger = () => {\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(NcModal, {\n    isOpenProp: show,\n    onCloseModal: onCloseModalTransferToken,\n    contentExtraClass: \"max-w-lg\",\n    renderContent: renderContent,\n    renderTrigger: renderTrigger,\n    modalTitle: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalTransferToken, \"gSWexK8idHTRtbhGpJOt6TRUPko=\");\n\n_c = ModalTransferToken;\nexport default ModalTransferToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalTransferToken\");","map":{"version":3,"names":["React","useEffect","useRef","ButtonPrimary","ButtonSecondary","Input","NcModal","ModalTransferToken","show","onCloseModalTransferToken","textareaRef","setTimeout","element","current","focus","setSelectionRange","value","length","renderContent","renderTrigger"],"sources":["/Users/ry1537/Documents/GitHub/rtc-web3/src/components/ModalTransferToken.tsx"],"sourcesContent":["import React, { FC, useEffect, useRef } from \"react\";\r\nimport ButtonPrimary from \"shared/Button/ButtonPrimary\";\r\nimport ButtonSecondary from \"shared/Button/ButtonSecondary\";\r\nimport Input from \"shared/Input/Input\";\r\nimport NcModal from \"shared/NcModal/NcModal\";\r\n\r\nexport interface ModalTransferTokenProps {\r\n  show: boolean;\r\n  onCloseModalTransferToken: () => void;\r\n}\r\n\r\nconst ModalTransferToken: FC<ModalTransferTokenProps> = ({\r\n  show,\r\n  onCloseModalTransferToken,\r\n}) => {\r\n  const textareaRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      setTimeout(() => {\r\n        const element: HTMLTextAreaElement | null = textareaRef.current;\r\n        if (element) {\r\n          (element as HTMLTextAreaElement).focus();\r\n          (element as HTMLTextAreaElement).setSelectionRange(\r\n            (element as HTMLTextAreaElement).value.length,\r\n            (element as HTMLTextAreaElement).value.length\r\n          );\r\n        }\r\n      }, 400);\r\n    }\r\n  }, [show]);\r\n\r\n  const renderContent = () => {\r\n    return (\r\n      <form action=\"#\">\r\n        <h3 className=\"text-lg font-semibold text-neutral-900 dark:text-neutral-200\">\r\n          Transfer token\r\n        </h3>\r\n        <span className=\"text-sm\">\r\n          You can transfer tokens from your address to another\r\n        </span>\r\n        <div className=\"mt-8 \">\r\n          <Input ref={textareaRef} placeholder=\"Paste address\" type={\"text\"} />\r\n        </div>\r\n        <div className=\"mt-4 space-x-3\">\r\n          <ButtonPrimary type=\"submit\">Submit</ButtonPrimary>\r\n          <ButtonSecondary type=\"button\" onClick={onCloseModalTransferToken}>\r\n            Cancel\r\n          </ButtonSecondary>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const renderTrigger = () => {\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <NcModal\r\n      isOpenProp={show}\r\n      onCloseModal={onCloseModalTransferToken}\r\n      contentExtraClass=\"max-w-lg\"\r\n      renderContent={renderContent}\r\n      renderTrigger={renderTrigger}\r\n      modalTitle=\"\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ModalTransferToken;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,MAA/B,QAA6C,OAA7C;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAOA,MAAMC,kBAA+C,GAAG,QAGlD;EAAA;;EAAA,IAHmD;IACvDC,IADuD;IAEvDC;EAFuD,CAGnD;EACJ,MAAMC,WAAW,GAAGR,MAAM,CAAC,IAAD,CAA1B;EAEAD,SAAS,CAAC,MAAM;IACd,IAAIO,IAAJ,EAAU;MACRG,UAAU,CAAC,MAAM;QACf,MAAMC,OAAmC,GAAGF,WAAW,CAACG,OAAxD;;QACA,IAAID,OAAJ,EAAa;UACVA,OAAD,CAAiCE,KAAjC;UACCF,OAAD,CAAiCG,iBAAjC,CACGH,OAAD,CAAiCI,KAAjC,CAAuCC,MADzC,EAEGL,OAAD,CAAiCI,KAAjC,CAAuCC,MAFzC;QAID;MACF,CATS,EASP,GATO,CAAV;IAUD;EACF,CAbQ,EAaN,CAACT,IAAD,CAbM,CAAT;;EAeA,MAAMU,aAAa,GAAG,MAAM;IAC1B,oBACE;MAAM,MAAM,EAAC,GAAb;MAAA,wBACE;QAAI,SAAS,EAAC,8DAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAM,SAAS,EAAC,SAAhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAOE;QAAK,SAAS,EAAC,OAAf;QAAA,uBACE,QAAC,KAAD;UAAO,GAAG,EAAER,WAAZ;UAAyB,WAAW,EAAC,eAArC;UAAqD,IAAI,EAAE;QAA3D;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAPF,eAUE;QAAK,SAAS,EAAC,gBAAf;QAAA,wBACE,QAAC,aAAD;UAAe,IAAI,EAAC,QAApB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,eAAD;UAAiB,IAAI,EAAC,QAAtB;UAA+B,OAAO,EAAED,yBAAxC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAmBD,CApBD;;EAsBA,MAAMU,aAAa,GAAG,MAAM;IAC1B,OAAO,IAAP;EACD,CAFD;;EAIA,oBACE,QAAC,OAAD;IACE,UAAU,EAAEX,IADd;IAEE,YAAY,EAAEC,yBAFhB;IAGE,iBAAiB,EAAC,UAHpB;IAIE,aAAa,EAAES,aAJjB;IAKE,aAAa,EAAEC,aALjB;IAME,UAAU,EAAC;EANb;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAzDD;;GAAMZ,kB;;KAAAA,kB;AA2DN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}